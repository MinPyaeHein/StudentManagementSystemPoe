CREATE TABLE IF NOT EXISTS public.teachers
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    address character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT teachers_pkey PRIMARY KEY (id)
,
    CONSTRAINT teachers_email_key UNIQUE (email)

)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.teachers
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS public.students
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    address character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT students_pkey PRIMARY KEY (id)
,
    CONSTRAINT students_email_key UNIQUE (email)

)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.students
    OWNER to postgres;

   //add ph column to students table
   ALTER TABLE public.students
   ADD COLUMN phone character varying(15) COLLATE pg_catalog."default";

   //add ph column to teachers table
   ALTER TABLE public.teachers
   ADD COLUMN phone character varying(15) COLLATE pg_catalog."default";

CREATE TABLE faculties (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    website_link VARCHAR(255),
    phone VARCHAR(20)
);

INSERT INTO faculties (name, email, website_link, phone) VALUES
('Dr. Alice Johnson', 'alice.johnson@example.com', 'https://aliceuniversity.edu', '123-456-7890'),
('Prof. Bob Smith', 'bob.smith@example.com', 'https://bobfaculty.edu', '234-567-8901'),
('Dr. Charlie Brown', 'charlie.brown@example.com', 'https://charlieacademy.edu', '345-678-9012'),
('Prof. David White', 'david.white@example.com', 'https://daviduniversity.edu', '456-789-0123'),
('Dr. Emma Green', 'emma.green@example.com', 'https://emmagreenedu.edu', '567-890-1234'),
('Prof. Frank Black', 'frank.black@example.com', 'https://frankfaculty.edu', '678-901-2345'),
('Dr. Grace Adams', 'grace.adams@example.com', 'https://graceacademy.edu', '789-012-3456'),
('Prof. Henry Ford', 'henry.ford@example.com', 'https://henryfaculty.edu', '890-123-4567'),
('Dr. Ivy Lee', 'ivy.lee@example.com', 'https://ivyuniversity.edu', '901-234-5678'),
('Prof. Jack King', 'jack.king@example.com', 'https://jackfaculty.edu', '012-345-6789');

ALTER TABLE public.students
ADD COLUMN faculty_id INTEGER NOT NULL DEFAULT 1,
ADD CONSTRAINT students_faculty_fk FOREIGN KEY (faculty_id)
REFERENCES public.faculties (id) ON DELETE SET DEFAULT;


<-allow faculty id to null ->
ALTER TABLE public.students
DROP CONSTRAINT students_faculty_fk;

ALTER TABLE public.students
ADD CONSTRAINT students_faculty_fk FOREIGN KEY (faculty_id)
    REFERENCES public.faculties (id)
    ON UPDATE NO ACTION
    ON DELETE SET NULL;

<-Create departments table->
CREATE TABLE departments (
    id SERIAL PRIMARY KEY,
    department VARCHAR(255) NOT NULL
);

INSERT INTO departments (department) VALUES
('Humanities and Social Sciences'),
('Natural Sciences'),
('Engineering and Technology'),
('Business and Management'),
('Health Sciences'),
('Arts and Design'),
('Law');

<-add degree and department to teachers ->
ALTER TABLE public.teachers
ADD COLUMN degree VARCHAR(255),
ADD COLUMN department_id integer NOT NULL DEFAULT 1,
ADD CONSTRAINT teachers_department_fk FOREIGN KEY (department_id)
    REFERENCES public.departments (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET DEFAULT;

select*from teachers



CREATE TYPE gender_enum AS ENUM ('male', 'female');
ALTER TABLE public.students ADD COLUMN gender gender_enum NOT NULL DEFAULT 'male';


	CREATE TABLE degree (
    id SERIAL PRIMARY KEY,
    degree VARCHAR(255) NOT NULL
);

INSERT INTO degree (degree) VALUES
('Bachelor of Arts (B.A.)'),
('Bachelor of Science (B.S.)'),
('Bachelor of Engineering (B.Eng)'),
('Bachelor of Commerce (B.Com)'),
('Bachelor of Education (B.Ed)'),
('Bachelor of Fine Arts (B.F.A)');

ALTER TABLE public.teachers
DROP COLUMN degree,
ADD COLUMN degree_id INTEGER NOT NULL DEFAULT 1,
ADD CONSTRAINT teachers_degree_fk FOREIGN KEY (degree_id)
    REFERENCES public.degree (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE RESTRICT;


